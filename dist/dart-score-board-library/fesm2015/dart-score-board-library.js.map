{"version":3,"file":"dart-score-board-library.js.map","sources":["ng://dart-score-board-library/lib/dart-score-board-library.service.ts","ng://dart-score-board-library/lib/dart-board-panel/translation/de.ts","ng://dart-score-board-library/lib/dart-board-panel/translation/en.ts","ng://dart-score-board-library/lib/dart-board-panel/translation/translation-provider.ts","ng://dart-score-board-library/lib/dart-score-board-library.component.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/dart-game-data.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/leg-data.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/player-data.ts","ng://dart-score-board-library/lib/dart-board-panel/export-import-data-panel/export-import-data-panel.component.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/score-entry.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/game-modes.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/score-validator.ts","ng://dart-score-board-library/lib/dart-board-panel/services/score.service.ts","ng://dart-score-board-library/lib/dart-board-panel/game-panel/game-panel.component.ts","ng://dart-score-board-library/lib/dart-board-panel/classes/game-setttings.ts","ng://dart-score-board-library/lib/dart-board-panel/setup-panel/setup-panel.component.ts","ng://dart-score-board-library/lib/dart-board-panel/score-panel/score-panel.component.ts","ng://dart-score-board-library/lib/dart-board-panel/dart-board/dart-board.component.ts","ng://dart-score-board-library/lib/dart-board-panel/dart-board-panel.component.ts","ng://dart-score-board-library/lib/dart-score-board-library.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DartScoreBoardLibraryService {\n\n  constructor() { }\n}\n","export class De {\r\n  public static translation() {\r\n    return {\r\n      // Translation Keys\r\n      'page.dartScoreBoard.setup.title': 'Spieleinstellung',\r\n      'page.dartScoreBoard.setup.gameMode': 'Spielmodus',\r\n      'page.dartScoreBoard.setup.requiredScore': 'Erforderliche Punkte pro Leg',\r\n      'page.dartScoreBoard.setup.player.add': 'hinzufÃ¼gen',\r\n      'page.dartScoreBoard.setup.player': 'Spieler',\r\n      'page.dartScoreBoard.setup.playerList': 'Spielerliste',\r\n      'page.dartScoreBoard.setup.throwInput': 'Eingabe des Wurfes',\r\n      'page.dartScoreBoard.setup.throwInput.hint': 'Klicken Sie auf das jeweilige Feld um den geworfenen Wert einzugeben.<br/> Klicken Sie auf den Ã¤uÃeren Kreis sollte die Scheibe verfehlt worden sein.',\r\n      'page.dartScoreBoard.setup.throwInput.resetThrow': 'Letzen Wurf zurÃ¼cksetzen',\r\n      'page.dartScoreBoard.setup.playerLis.hint': '<strong>{{name}}</strong> ist am Zug. <br/> Er darf noch <strong>{{dartCount}}</strong> mal werfen.',\r\n      'page.dartScoreBoard.setup.configure.players': 'Spielermanagement',\r\n      'page.dartScoreBoard.setup.player.add.placeholder': 'Name ...',\r\n      'page.dartScoreBoard.setup.player.order.title': 'Reihenfolge (Drag & Drop)',\r\n      'page.dartScoreBoard.setup.player.add.title': 'Spieler hinzufÃ¼gen',\r\n      'page.dartScoreBoard.setup.players.notFound': 'Noch keine Spieler hinzugefÃ¼gt',\r\n      'page.dartScoreBoard.setup.startGame': 'Spiel starten!',\r\n      'page.dartScoreBoard.setup.startNewRound': 'Neue Runde starten!',\r\n      'page.dartScoreBoard.setup.gameInProgress.hint': 'Derzeit wird ein Spiel ausgefÃ¼hrt! Ãnderungen an den Einstellungen sind deshalb nicht mÃ¶glich!',\r\n      'page.dartScoreBoard.setup.gameInProgress.cancelQuestion': 'Spiel abbrechen?',\r\n      'page.dartScoreBoard.setup.cancelGame.hint': 'Sind Sie sicher, dass Sie das laufende Spiel beenden mÃ¶chten?',\r\n      'page.dartScoreBoard.setup.cancelGame.confirm': 'Spiel beenden',\r\n      'page.dartScoreBoard.setup.cancelGame.cancel': 'Spiel fortsetzen',\r\n      'page.dartScoreBoard.setup.playerExists.hint': 'Dieser Spielername ist bereits vergeben',\r\n      'page.dartScoreBoard.game.export': 'Spielstand speichern',\r\n      'page.dartScoreBoard.game.import': 'Spielstand laden',\r\n      'page.dartScoreBoard.score.numberOfDarts': 'Dart Nr.',\r\n      'page.dartScoreBoard.score.details': 'Details',\r\n      'page.dartScoreBoard.score.details.stats': 'Statistiken des Lags',\r\n      'page.dartScoreBoard.score.details.throws': 'WÃ¼rfe',\r\n      'page.dartScoreBoard.score.details.average': '3 Darts Durchschnitt',\r\n      'page.dartScoreBoard.score.details.dartAverage': 'Durchschnitt pro Dart',\r\n\r\n      'page.dartScoreBoard.setup.settings.customized': 'Angepasst',\r\n\r\n      'page.dartScoreBoard.setup.gameMode.DOUBLE_IN': 'Doppel rein',\r\n      'page.dartScoreBoard.setup.gameMode.DOUBLE_OUT': 'Doppel raus',\r\n      'page.dartScoreBoard.setup.gameMode.DOUBLE_IN_AND_OUT': 'Doppel rein und raus',\r\n      'page.dartScoreBoard.setup.gameMode.TRIPPLE_IN': 'Dreifach rein',\r\n      'page.dartScoreBoard.setup.gameMode.TRIPPLE_OUT': 'Dreifach raus',\r\n      'page.dartScoreBoard.setup.gameMode.TRIPPLE_IN_AND_OUT': 'Dreifach rein und raus',\r\n      'page.dartScoreBoard.setup.gameMode.FREE_GAME': 'Freies Spiel',\r\n\r\n\r\n\r\n      'page.dartScoreBoard.game.finished': 'Herzlichen GlÃ¼ckwunsch <strong>\"{{player}}\"</strong>, du hast gewonnen!<br/> Eine neue Runde beginnen?',\r\n      'page.dartScoreBoard.game.winner': 'Das Leg wurde durch <strong>\"{{player}}\"</strong> gewonnen.<br/> Die Ã¼brigen Spieler kÃ¶nnen fortfahren oder es kann eine neue Runde begonnen werden',\r\n    };\r\n  }\r\n}\r\n","export class En {\r\n  public static translation() {\r\n    return {\r\n      // Translation Keys\r\n      'page.dartScoreBoard.setup.title': 'Game settings',\r\n      'page.dartScoreBoard.setup.gameMode': 'Game mode',\r\n      'page.dartScoreBoard.setup.requiredScore': 'Required points per leg',\r\n      'page.dartScoreBoard.setup.player.add': 'add',\r\n      'page.dartScoreBoard.setup.player': 'Player',\r\n      'page.dartScoreBoard.setup.playerList': 'Player list',\r\n      'page.dartScoreBoard.setup.throwInput': 'Throw input',\r\n      'page.dartScoreBoard.setup.throwInput.hint': 'Click on a specific field to submit a throw<br/> To enter a miss click on the outer ring.',\r\n      'page.dartScoreBoard.setup.throwInput.resetThrow': 'Revert last throw',\r\n      'page.dartScoreBoard.setup.playerLis.hint': '<strong>{{name}}</strong>\\'s turn. <br/> He has <strong>{{dartCount}}</strong> throws left.',\r\n      'page.dartScoreBoard.setup.configure.players': 'Player management',\r\n      'page.dartScoreBoard.setup.player.add.placeholder': 'Name ...',\r\n      'page.dartScoreBoard.setup.player.order.title': 'Order (Drag & Drop)',\r\n      'page.dartScoreBoard.setup.player.add.title': 'Add player',\r\n      'page.dartScoreBoard.setup.players.notFound': 'No player added yet',\r\n      'page.dartScoreBoard.setup.startGame': 'Start game',\r\n      'page.dartScoreBoard.setup.startNewRound': 'Start new round!',\r\n      'page.dartScoreBoard.setup.gameInProgress.hint': 'A game is running at this moment! In this time, changing the settings is not possible!',\r\n      'page.dartScoreBoard.setup.gameInProgress.cancelQuestion': 'Cancel game?',\r\n      'page.dartScoreBoard.setup.cancelGame.hint': 'Are you sure you want to cancel the game?',\r\n      'page.dartScoreBoard.setup.cancelGame.confirm': 'Cancel',\r\n      'page.dartScoreBoard.setup.cancelGame.cancel': 'Continue',\r\n      'page.dartScoreBoard.setup.playerExists.hint': 'This player exists already',\r\n      'page.dartScoreBoard.game.export': 'Save game',\r\n      'page.dartScoreBoard.game.import': 'Load game',\r\n      'page.dartScoreBoard.score.numberOfDarts': 'Dart no.',\r\n      'page.dartScoreBoard.score.details': 'Details',\r\n      'page.dartScoreBoard.score.details.stats': 'Stats of the lag',\r\n      'page.dartScoreBoard.score.details.throws': 'Throws',\r\n      'page.dartScoreBoard.score.details.average': '3 darts average',\r\n      'page.dartScoreBoard.score.details.dartAverage': 'Dart average',\r\n\r\n      'page.dartScoreBoard.setup.settings.customized': 'customized',\r\n\r\n      'page.dartScoreBoard.setup.gameMode.DOUBLE_IN': 'Double in',\r\n      'page.dartScoreBoard.setup.gameMode.DOUBLE_OUT': 'Double out',\r\n      'page.dartScoreBoard.setup.gameMode.DOUBLE_IN_AND_OUT': 'Double in and out',\r\n      'page.dartScoreBoard.setup.gameMode.TRIPPLE_IN': 'Tripple in',\r\n      'page.dartScoreBoard.setup.gameMode.TRIPPLE_OUT': 'Tripple out',\r\n      'page.dartScoreBoard.setup.gameMode.TRIPPLE_IN_AND_OUT': 'Tripple in and out',\r\n      'page.dartScoreBoard.setup.gameMode.FREE_GAME': 'Free game',\r\n\r\n      'page.dartScoreBoard.game.finished': 'Congratulations <strong>\"{{player}}\"</strong>, you won the round!<br/> Start a new one?',\r\n      'page.dartScoreBoard.game.winner': '<strong>\"{{player}}\"</strong> won the lag.<br/> The remaining players can finish the round or you can start a new one',\r\n    };\r\n  }\r\n}\r\n","import {TranslateService} from '@ngx-translate/core';\r\nimport {De} from './de';\r\nimport {En} from './en';\r\n\r\nexport class TranslationProvider {\r\n  public static setupTranslationProvider(translate: TranslateService, defaultLocale?: string) {\r\n    translate.setTranslation('de', De.translation(), true);\r\n    translate.setTranslation('en', En.translation(), true);\r\n    if (defaultLocale) {\r\n      translate.setDefaultLang(defaultLocale);\r\n    } else {\r\n      translate.setDefaultLang('de');\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TranslationProvider} from './dart-board-panel/translation/translation-provider';\n\n@Component({\n  selector: 'lib-dart-score-board-library',\n  template: `\n    <app-dart-board-panel></app-dart-board-panel>\n  `,\n  styles: []\n})\nexport class DartScoreBoardLibraryComponent implements OnInit, OnChanges {\n\n  @Input()\n  public locale: string;\n\n  constructor(private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.translationSetup();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.translationSetup();\n  }\n\n  private translationSetup() {\n    TranslationProvider.setupTranslationProvider(this.translate, this.locale);\n  }\n\n}\n","import {GameSettings} from './game-setttings';\r\nimport {PlayerData} from './player-data';\r\n\r\nexport class DartGameData {\r\n  public settings: GameSettings;\r\n  public gameData: Map<string, PlayerData>;\r\n  public currentActivePlayer: string;\r\n  public currentPlayerMapKeys: string[];\r\n  public throwsDone: number;\r\n  public legFinished: boolean;\r\n}\r\n","import {ScoreEntry} from './score-entry';\r\n\r\nexport class LegData {\r\n  public scores: Array<ScoreEntry> = [];\r\n  public finishedTime: number;\r\n  public totalThrowNumberInLeg: number;\r\n}\r\n","import {LegData} from './leg-data';\r\n\r\nexport class PlayerData {\r\n  public currentLeg: LegData;\r\n\r\n  constructor() {\r\n    this.currentLeg = new LegData();\r\n  }\r\n}\r\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {DartGameData} from '../classes/dart-game-data';\nimport {GameSettings} from '../classes/game-setttings';\nimport {PlayerData} from '../classes/player-data';\n\n@Component({\n  selector: 'app-export-import-data-panel',\n  templateUrl: './export-import-data-panel.component.html',\n  styleUrls: ['./export-import-data-panel.component.css']\n})\nexport class ExportImportDataPanelComponent implements OnInit {\n\n  @ViewChild('loadGameButton')\n  public importGameButton: ElementRef;\n\n  @Input()\n  public dartGameData: DartGameData;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public saveGame() {\n    const a = document.createElement('a');\n    let objectString = '{';\n    objectString += '\"settings\":' + JSON.stringify(this.dartGameData.settings) + ',';\n    objectString += '\"currentPlayerMapKeys\": ' + JSON.stringify(this.dartGameData.currentPlayerMapKeys) + ',';\n    objectString += '\"currentActivePlayer\": ' + JSON.stringify(this.dartGameData.currentActivePlayer) + ',';\n    objectString += '\"legFinished\": ' + JSON.stringify(this.dartGameData.legFinished) + ',';\n    objectString += '\"gameData\": [';\n    let isFirst = true;\n    for (const key of Array.from(this.dartGameData.gameData.keys())) {\n      if (!isFirst) {\n        objectString += ',';\n      } else {\n        isFirst = false;\n      }\n      const line = JSON.stringify(this.dartGameData.gameData.get(key));\n      objectString += '{\"key\": \"' + key + '\",';\n      objectString += '\"value\": ' + line + '}';\n    }\n    objectString += ']}';\n    a.setAttribute('href', 'data:text/plain;charset=utf-u,' + encodeURIComponent(objectString));\n    a.setAttribute('download', 'game-data-' + new Date().getTime() + '.json');\n    a.click();\n  }\n\n  public loadGame() {\n    this.importGameButton.nativeElement.click();\n  }\n\n  public fileLoaded(file: any) {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const data = fileReader.result as any;\n      const settings = JSON.parse(data).settings;\n      const currentActivePlayer = JSON.parse(data).currentActivePlayer;\n      const currentPlayerMapKeys = JSON.parse(data).currentPlayerMapKeys;\n      const legFinished = JSON.parse(data).legFinished;\n      const gameData = new Map<string, PlayerData>();\n      let throwsDone = 0;\n      for (const gameDataObject of JSON.parse(data).gameData) {\n        const gameEntry = new PlayerData();\n        gameEntry.currentLeg.scores = [];\n        for (const score of gameDataObject.value.currentLeg.scores) {\n          gameEntry.currentLeg.scores.push(score);\n        }\n        throwsDone += gameEntry.currentLeg.scores.length;\n        gameData.set(gameDataObject.key, gameDataObject.value);\n      }\n      this.dartGameData.throwsDone = throwsDone;\n      this.dartGameData.currentActivePlayer = currentActivePlayer;\n      this.dartGameData.legFinished = legFinished === 'true';\n      this.dartGameData.currentPlayerMapKeys = currentPlayerMapKeys;\n      this.dartGameData.gameData = gameData as Map<string, PlayerData>;\n      this.dartGameData.settings = settings as GameSettings;\n    };\n    fileReader.readAsText(file.target.files[0]);\n  }\n\n}\n","export class ScoreEntry {\r\n  public type: number;\r\n  public field: number;\r\n  public total: number;\r\n  public isValid: boolean;\r\n}\r\n","export enum GameModes {\r\n  FREE_GAME,\r\n  DOUBLE_IN,\r\n  DOUBLE_OUT,\r\n  DOUBLE_IN_AND_OUT,\r\n  TRIPPLE_IN,\r\n  TRIPPLE_OUT,\r\n  TRIPPLE_IN_AND_OUT\r\n}\r\n","export enum ScoreValidator {\r\n  VALID,\r\n  SINGLE_INVALID,\r\n  SET_INVALID\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {ScoreEntry} from '../classes/score-entry';\nimport {GameModes} from '../classes/game-modes';\nimport {ScoreValidator} from '../classes/score-validator';\n\n@Injectable()\nexport class ScoreService {\n\n  constructor() { }\n\n  public getPendingScores(index: number, scores: ScoreEntry[], requiredScore: number) {\n    let total = requiredScore;\n    if (index > scores.length - 1) {\n      index = scores.length - 1;\n    }\n    for (let i = 0; i <= index; i++) {\n      if (scores[i].isValid) {\n        total = total - scores[i].total;\n      }\n    }\n    return total;\n  }\n\n  public isScoreValid(allScores: ScoreEntry[], currentScore: ScoreEntry, gameMode: GameModes, requiredScore: number): ScoreValidator {\n    let cummulatedScores = this.getPendingScores(allScores.length - 1, allScores, requiredScore);\n    cummulatedScores = cummulatedScores - currentScore.total;\n\n    const isFirstValidEntry = this.isFirstValidEntry(allScores);\n    if ([GameModes.DOUBLE_IN, GameModes.DOUBLE_IN_AND_OUT].indexOf(gameMode) > -1 && isFirstValidEntry) {\n      if (currentScore.type === 2 && cummulatedScores >= 0) {\n        if (cummulatedScores >= 0) {\n          return ScoreValidator.VALID;\n        }\n        return ScoreValidator.SET_INVALID;\n      }\n      return ScoreValidator.SINGLE_INVALID;\n    }\n    if ([GameModes.TRIPPLE_IN, GameModes.TRIPPLE_IN_AND_OUT].indexOf(gameMode) > -1  && isFirstValidEntry) {\n      if (currentScore.type === 3) {\n        if (cummulatedScores >= 0) {\n          return ScoreValidator.VALID;\n        }\n        return ScoreValidator.SET_INVALID;\n      }\n      return ScoreValidator.SINGLE_INVALID;\n    }\n\n    if (cummulatedScores >= 3) {\n      return ScoreValidator.VALID;\n    }\n\n    if (cummulatedScores >= 2 && [GameModes.DOUBLE_OUT, GameModes.DOUBLE_IN_AND_OUT].indexOf(gameMode) > -1) {\n      return ScoreValidator.VALID;\n    }\n\n    if (cummulatedScores >= 1 && [GameModes.DOUBLE_IN, GameModes.TRIPPLE_IN, GameModes.FREE_GAME].indexOf(gameMode) > -1) {\n      return ScoreValidator.VALID;\n    }\n\n    if (cummulatedScores === 0) {\n      if ([GameModes.DOUBLE_OUT, GameModes.DOUBLE_IN_AND_OUT].indexOf(gameMode) > -1) {\n        if (currentScore.type === 2) {\n          return ScoreValidator.VALID;\n        }\n        return ScoreValidator.SET_INVALID;\n      }\n      if ([GameModes.TRIPPLE_OUT, GameModes.TRIPPLE_IN_AND_OUT].indexOf(gameMode) > -1) {\n        if (currentScore.type === 3) {\n          return ScoreValidator.VALID;\n        }\n        return ScoreValidator.SET_INVALID;\n      }\n      return ScoreValidator.VALID;\n    }\n\n    return ScoreValidator.SET_INVALID;\n  }\n\n  public isFirstValidEntry(scores: ScoreEntry[]) {\n    return scores.findIndex((s) => s.isValid === true) === -1;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ScoreEntry} from '../classes/score-entry';\nimport {DartGameData} from '../classes/dart-game-data';\nimport {PlayerData} from '../classes/player-data';\nimport {ScoreService} from '../services/score.service';\nimport {GameModes} from '../classes/game-modes';\nimport {ScoreValidator} from '../classes/score-validator';\nimport {unescape} from 'querystring';\n\n@Component({\n  selector: 'app-game-panel',\n  templateUrl: './game-panel.component.html',\n  styleUrls: ['./game-panel.component.css']\n})\nexport class GamePanelComponent implements OnInit {\n\n  @Input()\n  public dartGameData: DartGameData;\n\n  constructor(private scoreService: ScoreService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public scoreEntered(event: ScoreEntry) {\n    if (this.dartGameData.gameData && this.dartGameData.currentActivePlayer && !this.dartGameData.legFinished) {\n      const currentData = this.dartGameData.gameData.get(this.dartGameData.currentActivePlayer);\n      if (currentData.currentLeg && currentData.currentLeg.scores) {\n        const scoreValid = this.scoreService.isScoreValid(currentData.currentLeg.scores, event, this.dartGameData.settings.gameMode as GameModes, this.dartGameData.settings.requiredScore);\n        event.isValid = scoreValid === ScoreValidator.VALID;\n        currentData.currentLeg.scores.push(event);\n        if (scoreValid === ScoreValidator.SET_INVALID) {\n          this.invalidateSet(scoreValid, currentData);\n        }\n        if (this.scoreService.getPendingScores(currentData.currentLeg.scores.length - 1, currentData.currentLeg.scores, this.dartGameData.settings.requiredScore) === 0) {\n          currentData.currentLeg.finishedTime = new Date().getTime();\n          currentData.currentLeg.totalThrowNumberInLeg = this.dartGameData.throwsDone;\n          this.selectNextPlayer();\n        } else {\n          if (currentData.currentLeg.scores.length % 3 === 0) {\n            this.selectNextPlayer();\n          }\n        }\n        this.dartGameData.throwsDone += 1;\n      }\n    }\n  }\n\n  public scoreReverted() {\n    if (this.dartGameData.gameData && this.dartGameData.currentActivePlayer) {\n      let currentData = this.dartGameData.gameData.get(this.dartGameData.currentActivePlayer);\n      if (currentData.currentLeg && currentData.currentLeg.scores) {\n        const throwsLeftCount = 3 - currentData.currentLeg.scores.length % 3;\n        if (throwsLeftCount === 3) {\n          this.selectPreviousNotFinishedPlayer();\n        }\n        this.checkIfFinished(1);\n        currentData = this.dartGameData.gameData.get(this.dartGameData.currentActivePlayer);\n        let toDeletedRows = 0;\n        for (let i = currentData.currentLeg.scores.length - 1; i >= 0; i--) {\n          const score = currentData.currentLeg.scores[i];\n          toDeletedRows += 1;\n          if (score.type !== 0) {\n            break;\n          }\n        }\n        currentData.currentLeg.scores.splice(currentData.currentLeg.scores.length - toDeletedRows, toDeletedRows);\n\n        this.dartGameData.throwsDone -= 1;\n      }\n    }\n  }\n\n  public startNewGame() {\n    this.dartGameData.currentPlayerMapKeys = [];\n    const playerMap = new Map<string, PlayerData>();\n    let firstPlayerAssigned = false;\n    for (const player of this.dartGameData.settings.players) {\n      playerMap.set(player, new PlayerData());\n      if (!firstPlayerAssigned) {\n        this.dartGameData.currentActivePlayer = player;\n        firstPlayerAssigned = true;\n      }\n    }\n    this.dartGameData.throwsDone = 0;\n    this.dartGameData.gameData = playerMap;\n    this.dartGameData.legFinished = false;\n    this.dartGameData.currentPlayerMapKeys = Array.from(playerMap.keys());\n    this.dartGameData.settings.isGameActive = true;\n  }\n\n  public isPlayerActive(player: string) {\n    if (this.dartGameData.legFinished) {\n      return false;\n    }\n    return this.dartGameData.currentActivePlayer === player;\n  }\n\n  public getPlayerObject() {\n    const dartCount = 3 - this.dartGameData.gameData.get(this.dartGameData.currentActivePlayer).currentLeg.scores.length % 3;\n    return {'name': this.dartGameData.currentActivePlayer, 'dartCount': dartCount};\n  }\n\n  public getFirstFinisher() {\n    const finisherArray = [];\n    for (const player of this.dartGameData.currentPlayerMapKeys) {\n      const currentData = this.dartGameData.gameData.get(player);\n      if (currentData.currentLeg.finishedTime) {\n        finisherArray.push({'player': player, 'finishTime': currentData.currentLeg.finishedTime});\n      }\n    }\n    if (finisherArray.length === 0) {\n      return undefined;\n    }\n    let firstFinisher = finisherArray[0];\n    for (const finisher of finisherArray) {\n      if (finisher.finishTime < firstFinisher.finishTime) {\n        firstFinisher = finisher;\n      }\n    }\n    return firstFinisher.player;\n  }\n\n  private invalidateSet(scoreValid: ScoreValidator, currentData: PlayerData | undefined) {\n    let numberOfThrowsDone = currentData.currentLeg.scores.length % 3;\n    if (numberOfThrowsDone === 0) {\n      numberOfThrowsDone = 3;\n    }\n    for (let i = currentData.currentLeg.scores.length - 1; i >= currentData.currentLeg.scores.length - numberOfThrowsDone; i--) {\n      currentData.currentLeg.scores[i].isValid = false;\n    }\n\n    const throwsLeftCount = 3 - numberOfThrowsDone;\n    for (let i = 0; i < throwsLeftCount; i++) {\n      const dummyScore = new ScoreEntry();\n      dummyScore.isValid = false;\n      dummyScore.type = 0;\n      dummyScore.total = 0;\n      dummyScore.field = 0;\n      currentData.currentLeg.scores.push(dummyScore);\n    }\n  }\n\n  private selectPreviousNotFinishedPlayer(iteration?: number) {\n    if (!iteration) {\n      iteration = 1;\n    } else {\n      iteration += 1;\n    }\n    const indexOfActivePlayer = this.dartGameData.settings.players.indexOf(this.dartGameData.currentActivePlayer);\n    if (indexOfActivePlayer === 0) {\n      this.dartGameData.currentActivePlayer = this.dartGameData.settings.players[this.dartGameData.settings.players.length - 1];\n    } else {\n      this.dartGameData.currentActivePlayer = this.dartGameData.settings.players[indexOfActivePlayer - 1];\n    }\n    this.checkIfFinished(iteration);\n  }\n\n  private checkIfFinished(iteration: number) {\n    const currentData = this.dartGameData.gameData.get(this.dartGameData.currentActivePlayer);\n    if (currentData.currentLeg.finishedTime) {\n      if (this.dartGameData.throwsDone - 1 === currentData.currentLeg.totalThrowNumberInLeg) {\n        currentData.currentLeg.finishedTime = undefined;\n        currentData.currentLeg.totalThrowNumberInLeg = undefined;\n        this.dartGameData.legFinished = false;\n        this.dartGameData.settings.isGameActive = true;\n      } else {\n        if (iteration <= this.dartGameData.currentPlayerMapKeys.length) {\n          this.selectPreviousNotFinishedPlayer(iteration);\n        }\n      }\n    }\n  }\n\n  private selectNextPlayer(iteration?: number) {\n    if (!iteration) {\n      iteration = 1;\n    } else {\n      iteration += 1;\n    }\n    const indexOfActivePlayer = this.dartGameData.settings.players.indexOf(this.dartGameData.currentActivePlayer);\n    if (indexOfActivePlayer === this.dartGameData.settings.players.length - 1) {\n      this.dartGameData.currentActivePlayer = this.dartGameData.settings.players[0];\n    } else {\n      this.dartGameData.currentActivePlayer = this.dartGameData.settings.players[indexOfActivePlayer + 1];\n    }\n    const newPlayerScores = this.dartGameData.gameData.get(this.dartGameData.currentActivePlayer).currentLeg.scores;\n    if (this.scoreService.getPendingScores(newPlayerScores.length - 1, newPlayerScores, this.dartGameData.settings.requiredScore) === 0) {\n      if (iteration <= this.dartGameData.currentPlayerMapKeys.length) {\n        this.selectNextPlayer(iteration);\n      } else {\n        this.dartGameData.legFinished = true;\n        this.dartGameData.settings.isGameActive = false;\n      }\n    }\n  }\n\n}\n","import {GameModes} from './game-modes';\r\n\r\nexport class GameSettings {\r\n  public isGameActive: boolean;\r\n  public gameMode: number;\r\n  public requiredScore: number;\r\n  public players: Array<string>;\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {GameSettings} from '../classes/game-setttings';\r\nimport {GameModes} from '../classes/game-modes';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-setup-panel',\r\n  templateUrl: './setup-panel.component.html',\r\n  styleUrls: ['./setup-panel.component.css']\r\n})\r\nexport class SetupPanelComponent implements OnInit {\r\n\r\n  @Input()\r\n  public gameSettings: GameSettings;\r\n\r\n  @Output()\r\n  public gameStarted = new EventEmitter();\r\n\r\n  public isCustomizedRequiredScore: boolean;\r\n  public requiredScoreModel: number;\r\n  public newPlayerName = '';\r\n  public showGameCancelWarning = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isCustomizedRequiredScore = false;\r\n    if (this.gameSettings.requiredScore) {\r\n      this.requiredScoreModel = this.gameSettings.requiredScore;\r\n    }\r\n  }\r\n\r\n  public getGameModes() {\r\n    const modes = [];\r\n    const allModes = Object.keys(GameModes.valueOf());\r\n    for (const mode of allModes.slice(0, allModes.length / 2)) {\r\n      modes.push(parseInt(mode, 10));\r\n    }\r\n\r\n    return modes;\r\n  }\r\n\r\n  public getGameModeValue(key: number) {\r\n    return GameModes.valueOf()[key];\r\n  }\r\n\r\n  public getConvertedRequiredScore() {\r\n    if (this.isCustomizedRequiredScore) {\r\n      return -1;\r\n    }\r\n    return this.gameSettings.requiredScore;\r\n  }\r\n\r\n  public setRequiredScore(score: number) {\r\n    if (this.gameSettings.isGameActive) {\r\n      return;\r\n    }\r\n    this.gameSettings.requiredScore = score;\r\n    this.requiredScoreModel = score;\r\n  }\r\n\r\n  public setGameMode(mode: number) {\r\n    if (this.gameSettings.isGameActive) {\r\n      return;\r\n    }\r\n    this.gameSettings.gameMode = mode;\r\n  }\r\n\r\n  public doesPlayerExists() {\r\n    return this.gameSettings.players.indexOf(this.newPlayerName.trim()) > -1;\r\n  }\r\n\r\n  public addNewPlayer() {\r\n    if (this.gameSettings.isGameActive) {\r\n      return;\r\n    }\r\n    if (this.newPlayerName.trim() !== '' && !this.doesPlayerExists()) {\r\n      this.gameSettings.players.push(this.newPlayerName);\r\n      this.newPlayerName = '';\r\n    }\r\n  }\r\n\r\n  public removePlayer(name: string) {\r\n    if (this.gameSettings.isGameActive) {\r\n      return;\r\n    }\r\n    if (name && name.trim() !== '') {\r\n      const index = this.gameSettings.players.indexOf(name);\r\n      if (index > -1) {\r\n        this.gameSettings.players.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isGameReady() {\r\n    return this.gameSettings &&\r\n      this.gameSettings.requiredScore > 0 &&\r\n      this.gameSettings.players.length > 0 &&\r\n      this.gameSettings.gameMode > -1;\r\n  }\r\n\r\n  public startGame() {\r\n    if (this.gameSettings.isGameActive) {\r\n      return;\r\n    }\r\n    if (this.isGameReady()) {\r\n      this.gameStarted.emit();\r\n    }\r\n  }\r\n\r\n  public getGameCancelWarningClass() {\r\n    return this.showGameCancelWarning ? 'display-warning' : 'hide-warning';\r\n  }\r\n\r\n  public cancelGame() {\r\n    this.showGameCancelWarning = false;\r\n    this.gameSettings.isGameActive = false;\r\n  }\r\n\r\n  public drop(event: CdkDragDrop<string[]>) {\r\n    if (this.gameSettings.isGameActive) {\r\n      return;\r\n    }\r\n    moveItemInArray(this.gameSettings.players, event.previousIndex, event.currentIndex);\r\n  }\r\n}\r\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {PlayerData} from '../classes/player-data';\nimport {LegData} from '../classes/leg-data';\nimport {ScoreEntry} from '../classes/score-entry';\nimport {ScoreService} from '../services/score.service';\n\n@Component({\n  selector: 'app-score-panel',\n  templateUrl: './score-panel.component.html',\n  styleUrls: ['./score-panel.component.css']\n})\nexport class ScorePanelComponent implements OnInit, OnChanges {\n  @Input()\n  public legData: LegData;\n\n  @Input()\n  public playerName: string;\n\n  @Input()\n  public requiredScore: number;\n\n  @Input()\n  public isActive: boolean;\n\n  @ViewChild('scoreEntryPanel')\n  public scoreEntryPanel: ElementRef;\n\n  public displayDetails: boolean = false;\n\n  constructor(private scoreService: ScoreService) {\n  }\n\n  ngOnInit() {\n    this.displayDetails = this.isActive;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.isActive) {\n      setTimeout(() => {\n        this.displayDetails = this.isActive;\n        this.scrollToScoreBottom();\n      }, 1000);\n    }\n  }\n\n  public getPendingScores(index: number) {\n    return this.scoreService.getPendingScores(index, this.legData.scores, this.requiredScore);\n  }\n\n  public getScoreDisplay(score: number) {\n    if (score <= 0) {\n      return '00';\n    }\n    if (score < 10) {\n      return '0' + score;\n    }\n    return score;\n  }\n\n  public get3DartAverage() {\n    const numberOfCompleteSets = Math.floor(this.legData.scores.length / 3);\n    if (numberOfCompleteSets <= 0) {\n      return '(--)';\n    }\n    const score = this.getPendingScores(numberOfCompleteSets * 3 - 1);\n    return (this.requiredScore - score) / numberOfCompleteSets;\n  }\n\n  public getSingleDartAverage() {\n    if (this.legData.scores.length === 0) {\n      return '(--)';\n    }\n    const score = this.getPendingScores(this.legData.scores.length - 1);\n    return (this.requiredScore - score) / (this.legData.scores.length);\n  }\n\n  public triggerDisplayDetails() {\n    this.displayDetails = !this.displayDetails;\n    this.scrollToScoreBottom();\n  }\n\n  public scrollToScoreBottom() {\n    this.scoreEntryPanel.nativeElement.scrollTop = this.scoreEntryPanel.nativeElement.scrollHeight;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ScoreEntry} from '../classes/score-entry';\r\n\r\n@Component({\r\n  selector: 'app-dart-board',\r\n  templateUrl: './dart-board.component.html',\r\n  styleUrls: ['./dart-board.component.css']\r\n})\r\nexport class DartBoardComponent implements OnInit {\r\n\r\n  @Output()\r\n  public scoreEntered = new EventEmitter();\r\n\r\n  @Output()\r\n  public scoreReverted = new EventEmitter();\r\n\r\n  @Input()\r\n  public throwsDone = 0;\r\n\r\n  public clickedId = undefined;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public score(type: number, field: number, event: MouseEvent) {\r\n    this.clickedId = (event.target as any).id;\r\n    setTimeout(() => {\r\n      this.clickedId = undefined;\r\n    }, 750);\r\n    const scoreObject = new ScoreEntry();\r\n    scoreObject.field = field;\r\n    scoreObject.type = type;\r\n    scoreObject.total = type * field;\r\n    scoreObject.isValid = true;\r\n    this.scoreEntered.emit(scoreObject);\r\n  }\r\n\r\n  public revertScore() {\r\n    this.scoreReverted.emit();\r\n  }\r\n\r\n  public getFillColor(elementId: string, defaultColor: string) {\r\n    if (!this.clickedId || this.clickedId !== elementId) Â {\r\n      return defaultColor;\r\n    }\r\n    return '#0009b7';\r\n  }\r\n\r\n}\r\n","import {ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\r\nimport {DartGameData} from './classes/dart-game-data';\r\nimport {GameSettings} from './classes/game-setttings';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {TranslationProvider} from './translation/translation-provider';\r\nimport {GameModes} from './classes/game-modes';\r\nimport {PlayerData} from './classes/player-data';\r\nimport {ScoreEntry} from './classes/score-entry';\r\nimport {GamePanelComponent} from './game-panel/game-panel.component';\r\n\r\n@Component({\r\n  selector: 'app-dart-board-panel',\r\n  templateUrl: './dart-board-panel.component.html',\r\n  styleUrls: ['./dart-board-panel.component.css']\r\n})\r\nexport class DartBoardPanelComponent implements OnInit, OnChanges {\r\n\r\n  @ViewChild('gamePanel')\r\n  public gamePanel: GamePanelComponent;\r\n\r\n  @Input()\r\n  public locale: string;\r\n\r\n  public dartGameData: DartGameData;\r\n\r\n  constructor(private translate: TranslateService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dartGameData = new DartGameData();\r\n    this.dartGameData.settings = new GameSettings();\r\n    this.dartGameData.settings.gameMode = GameModes.FREE_GAME;\r\n    this.dartGameData.settings.requiredScore = 501;\r\n    this.dartGameData.settings.players = [];\r\n    this.dartGameData.currentPlayerMapKeys = [];\r\n    TranslationProvider.setupTranslationProvider(this.translate, this.locale);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n  }\r\n\r\n  public startNewGame() {\r\n    this.gamePanel.startNewGame();\r\n  }\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { DartScoreBoardLibraryComponent } from './dart-score-board-library.component';\nimport {FormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AngularSvgIconModule} from 'angular-svg-icon';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ExportImportDataPanelComponent} from './dart-board-panel/export-import-data-panel/export-import-data-panel.component';\nimport {GamePanelComponent} from './dart-board-panel/game-panel/game-panel.component';\nimport {SetupPanelComponent} from './dart-board-panel/setup-panel/setup-panel.component';\nimport {ScorePanelComponent} from './dart-board-panel/score-panel/score-panel.component';\nimport {DartBoardComponent} from './dart-board-panel/dart-board/dart-board.component';\nimport {DartBoardPanelComponent} from './dart-board-panel/dart-board-panel.component';\nimport {ScoreService} from './dart-board-panel/services/score.service';\n\n@NgModule({\n  declarations: [\n    DartScoreBoardLibraryComponent,\n    DartBoardPanelComponent,\n    DartBoardComponent,\n    ScorePanelComponent,\n    SetupPanelComponent,\n    GamePanelComponent,\n    ExportImportDataPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    AngularSvgIconModule,\n    HttpClientModule,\n    DragDropModule,\n    TranslateModule.forRoot()\n  ],\n  providers: [ScoreService],\n  exports: [DartScoreBoardLibraryComponent]\n})\nexport class DartScoreBoardLibraryModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DartScoreBoardLibraryModule,\n      providers: [ScoreService]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
